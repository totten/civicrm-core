<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from xml/schema/CRM/Case/Case.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:1ae35a7a60938212678c1585defc3506)
 */

/**
 * Database access object for the Case entity.
 */
class CRM_Case_DAO_Case extends CRM_Core_DAO {
  const EXT = 'civicrm';
  const TABLE_ADDED = '1.8';
  const COMPONENT = 'CiviCase';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_case';

  /**
   * Icon associated with this entity.
   *
   * @var string
   */
  public static $_icon = 'fa-folder-open';

  /**
   * Field to show when displaying a record.
   *
   * @var string
   */
  public static $_labelField = 'subject';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique Case ID
   *
   * @var int
   */
  public $id;

  /**
   * FK to civicrm_case_type.id
   *
   * @var int
   */
  public $case_type_id;

  /**
   * Short name of the case.
   *
   * @var string
   */
  public $subject;

  /**
   * Date on which given case starts.
   *
   * @var date
   */
  public $start_date;

  /**
   * Date on which given case ends.
   *
   * @var date
   */
  public $end_date;

  /**
   * Details populated from Open Case. Only used in the CiviCase extension.
   *
   * @var text
   */
  public $details;

  /**
   * ID of case status.
   *
   * @var int
   */
  public $status_id;

  /**
   * @var bool
   */
  public $is_deleted;

  /**
   * When was the case was created.
   *
   * @var timestamp
   */
  public $created_date;

  /**
   * When was the case (or closely related entity) was created or modified or deleted.
   *
   * @var timestamp
   */
  public $modified_date;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_case';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? ts('Cases') : ts('Case');
  }

  /**
   * Returns user-friendly description of this entity.
   *
   * @return string
   */
  public static function getEntityDescription() {
    return ts('Collections of activities and relationships for a given purpose.');
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [
  'index_case_type_id' => 
  [
    'name' => 'index_case_type_id',
    'field' => 
    [
      0 => 'case_type_id',
    ],
    'localizable' => FALSE,
    'sig' => 'civicrm_case::0::case_type_id',
  ],
  'index_is_deleted' => 
  [
    'name' => 'index_is_deleted',
    'field' => 
    [
      0 => 'is_deleted',
    ],
    'localizable' => FALSE,
    'sig' => 'civicrm_case::0::is_deleted',
  ],
];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
