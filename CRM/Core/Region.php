<?php

/**
 * Maintain a set of markup/templates to inject inside various regions
 */
class CRM_Core_Region {
  static private $_instances = NULL;

  /**
   * Obtain the content for a given region.
   *
   * @param string $name
   * @param bool $autocreate
   *   Whether to automatically create an empty region.
   * @return CRM_Core_Region
   */
  public static function &instance($name, $autocreate = TRUE) {
    if ($autocreate && !isset(self::$_instances[$name])) {
      self::$_instances[$name] = new CRM_Core_Region($name);
    }
    return self::$_instances[$name];
  }

  use CRM_Core_Resources_CollectionTrait {
    CRM_Core_Resources_CollectionTrait::add as _add;
  }

  /**
   * Symbolic name of this region
   *
   * @var string
   */
  public $_name;

  /**
   * @param string $name
   */
  public function __construct($name) {
    $this->_name = $name;
    $this->types = ['markup', 'template', 'callback', 'scriptUrl', 'script', 'jquery', 'settings', 'style', 'styleUrl'];

    // Placeholder which represents any of the default content generated by the main Smarty template
    $this->add([
      'name' => 'default',
      'type' => 'markup',
      'markup' => '',
      'weight' => 0,
    ]);
  }

  /**
   * Render all the snippets in a region.
   *
   * @param string $default
   *   HTML, the initial content of the region.
   * @param bool $allowCmsOverride
   *   Allow CMS to override rendering of region.
   * @return string, HTML
   */
  public function render($default, $allowCmsOverride = TRUE) {
    // $default is just another part of the region
    if (is_array($this->snippets['default'])) {
      $this->snippets['default']['markup'] = $default;
    }
    // We hand as much of the work off to the CMS as possible
    $cms = CRM_Core_Config::singleton()->userSystem;

    $this->sort();

    $smarty = CRM_Core_Smarty::singleton();
    $html = '';
    foreach ($this->snippets as $snippet) {
      if ($snippet['disabled']) {
        continue;
      }
      switch ($snippet['type']) {
        case 'markup':
          $html .= $snippet['markup'];
          break;

        case 'template':
          $tmp = $smarty->get_template_vars('snippet');
          $smarty->assign('snippet', $snippet);
          $html .= $smarty->fetch($snippet['template']);
          $smarty->assign('snippet', $tmp);
          break;

        case 'callback':
          $args = $snippet['arguments'] ?? array(&$snippet, &$html);
          $html .= call_user_func_array($snippet['callback'], $args);
          break;

        case 'scriptUrl':
          if (!$allowCmsOverride || !$cms->addScriptUrl($snippet['scriptUrl'], $this->_name)) {
            $html .= sprintf("<script type=\"text/javascript\" src=\"%s\">\n</script>\n", $snippet['scriptUrl']);
          }
          break;

        case 'jquery':
          $snippet['script'] = sprintf("CRM.\$(function(\$) {\n%s\n});", $snippet['jquery']);
          // no break - continue processing as script
        case 'script':
          if (!$allowCmsOverride || !$cms->addScript($snippet['script'], $this->_name)) {
            $html .= sprintf("<script type=\"text/javascript\">\n%s\n</script>\n", $snippet['script']);
          }
          break;

        case 'styleUrl':
          if (!$allowCmsOverride || !$cms->addStyleUrl($snippet['styleUrl'], $this->_name)) {
            $html .= sprintf("<link href=\"%s\" rel=\"stylesheet\" type=\"text/css\"/>\n", $snippet['styleUrl']);
          }
          break;

        case 'style':
          if (!$allowCmsOverride || !$cms->addStyle($snippet['style'], $this->_name)) {
            $html .= sprintf("<style type=\"text/css\">\n%s\n</style>\n", $snippet['style']);
          }
          break;

        case 'settings':
          $settingsData = Civi::resources()->getSettings($this->_name);

          if (($this->_name === 'html-header') || !CRM_Core_Resources::isAjaxMode()) {
            $js = 'var CRM = ' . json_encode($settingsData) . ';';
          }
          // For an ajax request we append to it
          else {
            $js = 'CRM.$.extend(true, CRM, ' . json_encode($settingsData) . ');';
          }
          $html .= sprintf("<script type=\"text/javascript\">\n%s\n</script>\n", $js);

          break;

        default:
          throw new CRM_Core_Exception(ts('Snippet type %1 is unrecognized',
            [1 => $snippet['type']]));
      }
    }
    return $html;
  }

  /**
   * @param array $snippet
   *   Ex: ['script' => 'alert("Hello");']
   * @return array
   *   The full/computed snippet (with defaults applied).
   * @see CRM_Core_Resources_CollectionTrait::add
   */
  public function add($snippet) {
    if (!array_key_exists('region', $snippet)) {
      $snippet['region'] = $this->_name;
    }
    return $this->_add($snippet);
  }

}
